{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nlet timeInterval;\nlet userSelectedDate;\n// let startingDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0].getTime() > Date.now()) {\n      document.querySelector('button[data-start]').removeAttribute('disabled');\n      userSelectedDate = selectedDates[0];\n      startingDate = new Date();\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      clearInterval(setTimer);\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst inputTime = document.querySelector('#datetime-picker');\nflatpickr(inputTime, options);\nconst startBtn = document.querySelector('button[data-start]');\nconst spanDays = document.querySelector('span[data-days]');\nconst spanHours = document.querySelector('span[data-hours]');\nconst spanMinutes = document.querySelector('span[data-minutes]');\nconst spanSeconds = document.querySelector('span[data-seconds]');\n\nstartBtn.addEventListener('click', event => {\n  startBtn.disabled = true;\n\n  const repeatTime = setInterval(() => {\n    timeInterval = userSelectedDate - new Date();\n    startBtn.classList.remove(`btn-active`);\n    if (timeInterval < 1) {\n      startBtn.disabled = true;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeInterval);\n    spanDays.innerText = timer.days.toString().padStart(2, '0');\n    spanHours.innerText = timer.hours.toString().padStart(2, '0');\n    spanMinutes.innerText = timer.minutes.toString().padStart(2, '0');\n    spanSeconds.innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["timeInterval","userSelectedDate","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","inputTime","flatpickr","startBtn","spanDays","spanHours","spanMinutes","spanSeconds","event","repeatTime","timer"],"mappings":"+IAIA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpC,SAAS,cAAc,oBAAoB,EAAE,gBAAgB,UAAU,EACvEF,EAAmBE,EAAc,CAAC,EAClC,aAAe,IAAI,OAEnBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACD,cAAc,QAAQ,EAEzB,CACH,EAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EAC3DC,EAAUD,EAAWT,CAAO,EAC5B,MAAMW,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/DJ,EAAS,iBAAiB,QAASK,GAAS,CAC1CL,EAAS,SAAW,GAEpB,MAAMM,EAAa,YAAY,IAAM,CAGnC,GAFAnB,EAAeC,EAAmB,IAAI,KACtCY,EAAS,UAAU,OAAO,YAAY,EAClCb,EAAe,EAAG,CACpBa,EAAS,SAAW,GACpB,cAAcM,CAAU,EACxB,MACD,CACD,MAAMC,EAAQf,EAAUL,CAAY,EACpCc,EAAS,UAAYM,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1DL,EAAU,UAAYK,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5DJ,EAAY,UAAYI,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAChEH,EAAY,UAAYG,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACjE,EAAE,GAAI,CACT,CAAC"}